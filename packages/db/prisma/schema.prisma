generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String? @unique
  name String? 
  number String @unique
  password String 
  Balance Balance?
  onRampTransaction onRampTransaction[] 
  sentTransfer p2pTransfer[] @relation(name : "fromUserRelation") // to sperate the relations we must give them a name
  recievedTransfer p2pTransfer[] @relation(name : "toUserRelation")
}

model Merchant {
  id Int @id @default(autoincrement())
  email String @unique
  name String?
  auth_type AuthType 
}

model Balance {
  id Int @id @default(autoincrement())
  userId Int @unique
  amount Int @default(0)
  locked Int 
  user User @relation(fields: [userId], references: [id])
}

model onRampTransaction {    // sent by bank api(on ramp to the wallet)
  id Int @id @default(autoincrement())
  status onRampStatus
  token String @unique
  startTime DateTime
  amount Int 
  provider String
  userId Int 
  user User @relation(fields: [userId], references: [id])
}

enum onRampStatus {
  Success 
  Failure
  Processing
}

enum AuthType {
  Google 
  Github
}

model p2pTransfer {
  id Int @id @default(autoincrement())
  amount Int 
  timestamp DateTime 
  toUserId Int 
  toUser User @relation(name: "toUserRelation", fields: [toUserId], references: [id])
  fromUserId Int 
  fromUser User @relation(name: "fromUserRelation", fields: [fromUserId], references: [id])
}